---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-cd
  namespace: argocd
spec:
  project: default
  # Source of the application manifests
  source:
    repoURL: https://argoproj.github.io/argo-helm
    targetRevision: 4.9.7
    #path: test/test # Need to test using path + valueFiles when pointing to a helm chart repo. + helm.parameters for prod vs dev differences

    chart: argo-cd
    helm:

      # Release name override (defaults to application name)
      releaseName: argo-cd

      # Values file as block file
      values: |
        extraObjects:
          - apiVersion: v1
            kind: ConfigMap
            metadata:
              name: cmp-plugin
            data:
              avp.yaml: |
                apiVersion: argoproj.io/v1alpha1
                kind: ConfigManagementPlugin
                metadata:
                  name: argocd-vault-plugin
                spec:
                  allowConcurrency: true
                  discover:
                    find:
                      command:
                        - sh
                        - "-c"
                        - "find . -name '*.yaml' | xargs -I {} grep \"<path\\|avp\\.kubernetes\\.io\" {} | grep ."
                  generate:
                    command:
                      - argocd-vault-plugin
                      - generate
                      - "."
                  lockRepo: false
        dex:
          enabled: false
        server:
          extraArgs:
            - --insecure
          config:
              resource.customizations: |
                argoproj.io/Application:
                  health.lua: |
                    hs = {}
                    hs.status = "Progressing"
                    hs.message = ""
                    if obj.status ~= nil then
                      if obj.status.health ~= nil then
                        hs.status = obj.status.health.status
                        if obj.status.health.message ~= nil then
                          hs.message = obj.status.health.message
                        end
                      end
                    end
                    return hs
              kustomize.buildOptions: "--enable-alpha-plugins"
          volumes:
            - configMap:
                name: cmp-plugin
              name: cmp-plugin
            - name: custom-tools
              emptyDir: {}
          # repositories: |
          #   - type: helm
          #     name: argo-cd
          #     url: https://argoproj.github.io/argo-helm
          extraContainers:
            - name: avp
              command: [/var/run/argocd/argocd-cmp-server]
              image: registry.access.redhat.com/ubi8
              securityContext:
                runAsNonRoot: true
                runAsUser: 999
              volumeMounts:
                - mountPath: /var/run/argocd
                  name: var-files
                - mountPath: /home/argocd/cmp-server/plugins
                  name: plugins
                - mountPath: /tmp
                  name: tmp

                # Register plugins into sidecar
                - mountPath: /home/argocd/cmp-server/config/plugin.yaml
                  subPath: avp.yaml
                  name: cmp-plugin

                # Important: Mount tools into $PATH
                - name: custom-tools
                  subPath: argocd-vault-plugin
                  mountPath: /usr/local/bin/argocd-vault-plugin
          initContainers:
            - name: download-tools
              image: registry.access.redhat.com/ubi8
              env:
                - name: AVP_VERSION
                  value: 1.11.0
              command: [sh, -c]
              args:
                - >-
                  curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64 -o argocd-vault-plugin &&
                  chmod +x argocd-vault-plugin &&
                  mv argocd-vault-plugin /custom-tools/
              volumeMounts:
                - mountPath: /custom-tools
                  name: custom-tools
          ingress:
            enabled: true
            anotations:
              ingress.kubernetes.io/secure-backends: "true"
              traefik.ingress.kubernetes.io/router.entrypoints: websecure
              hajimari.io/enable: "true"
              hajimari.io/icon: "sync"
              hajimari.io/appName: "Argo-cd"
            ingressClassName: "traefik"
            hosts:
              - argocd.finnhartshorn.com
            tls:
              - secretName: wildcard-tls
                hosts:
                  - argocd.finnhartshorn.com
            https: false
            paths:
              - /
            pathType: Prefix


  # Destination cluster and namespace to deploy the application
  destination:
    server: {{ .Values.spec.destination.server }}
    namespace: argo-cd

  syncPolicy: {}
#  syncPolicy:
#    automated:
#      prune: true
#      selfHeal: true
#    syncOptions:
#    - CreateNamespace=true